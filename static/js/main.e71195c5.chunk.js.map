{"version":3,"sources":["components/List/Badge/Badge.js","assets/img/close.svg","components/List/Index.js","components/List/AddListButton/AddListButton.js","assets/img/pen.svg","assets/img/plus.svg","components/List/Tasks/addTaskForm.js","components/List/Tasks/TasksItem.js","components/List/Tasks/Tasks.js","assets/img/Vector.svg","App.js","reportWebVitals.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","window","confirm","axios","delete","then","response","removeList","src","closeSvg","alt","AddButtonList","colors","onAddList","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","isLoading","setIsLoading","inputValue","setinputValue","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","value","onChange","e","target","type","placeholder","post","colorId","data","console","log","filter","c","listObj","catch","alert","finally","AddTaskForm","list","onAddTask","visibleForm","setFormVisible","setInputValue","toggleFormVisible","disabled","obj","listId","text","completed","plusSvg","TasksItem","onEdit","onRemoveTask","onComplete","checked","htmlFor","Tasks","onEditTitle","withoutEmpty","onEditTask","onCompleteTask","to","style","hex","newTitle","prompt","patch","penSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","useLocation","get","location","pathname","split","find","Number","taskObj","newList","taskId","onEditListTitle","title","newlist","newTaskText","push","listsvg","newLists","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71195c5.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\n\r\nimport './Badge.scss'\r\n\r\nconst Badge = ({color, onClick, className}) => <i onClick={onClick} className={classNames('badge', {[`badge--${color}`]: color}, className)}></i>\r\n\r\n\r\nexport default Badge","export default __webpack_public_path__ + \"static/media/close.ac7b9278.svg\";","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport Badge from './Badge/Badge'\r\n\r\nimport axios from 'axios'\r\n\r\nimport closeSvg from '../../assets/img/close.svg'\r\n\r\nimport './Badge/Badge'\r\n\r\n\r\nconst List = ({ items, isRemovable, onClick, onRemove, onClickItem, activeItem }) => {\r\n\r\n    const removeList = (item) => {\r\n        if (window.confirm('Вы действительно хотите удалить список?')) {\r\n            axios.delete('http://localhost:3001/lists/' + item.id).then((response) => {\r\n                onRemove(item.id)\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul onClick={onClick} className=\"list\">\r\n            {items.map((item, index) => (\r\n                <li onClick={onClickItem ? () => onClickItem(item) : null} key={index} className={classNames(item.className, { active: item.active ? item.active : activeItem && activeItem.id === item.id})}>\r\n                    <i>\r\n                        {item.icon ? (item.icon) : <Badge color={item.color.name} />}\r\n                    </i>\r\n                    <span>\r\n                    {item.name}\r\n                    {item.tasks && `(${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable && <img onClick={() => removeList(item)} className='list__close-icon' src={closeSvg} alt=\"Close icon\" />}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport List from '../Index'\r\nimport Badge from '../Badge/Badge'\r\nimport closeSvg from '../../../assets/img/close.svg'\r\n\r\nimport './AddListButton.scss'\r\nimport '../List.scss'\r\n\r\n\r\n\r\n\r\nconst AddButtonList = ({colors, onAddList}) => {\r\n    // eslint-disable-next-line\r\n    const [visiblePopup, setVisiblePopup] = useState(false)\r\n    const [selectedColor, setSelectedColor] = useState(3)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [inputValue, setinputValue] = useState('')  \r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) { \r\n            setSelectedColor(colors[0].id);\r\n        }\r\n      }, [colors]);\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setinputValue('');\r\n        setSelectedColor(colors[0].id)\r\n    }\r\n\r\n    const addList = () => {\r\n        if(!inputValue) {\r\n            alert('Введите название списка');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        \r\n        axios\r\n          .post('http://localhost:3001/lists', {\r\n            name: inputValue,\r\n            colorId: selectedColor\r\n          })\r\n          .then(({ data }) => {\r\n            console.log(data)\r\n            const color = colors.filter(c => c.id === selectedColor)[0];\r\n            const listObj = { ...data, color, tasks: []};\r\n            onAddList(listObj);\r\n            onClose();\r\n          })\r\n          .catch(() => {\r\n            alert('Ошибка при добавлении списка!');\r\n          })\r\n          .finally(() => {\r\n            setIsLoading(false);\r\n          });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"add-list\">\r\n            <List\r\n              onClick={() => setVisiblePopup(!visiblePopup)}\r\n             items={[\r\n              \r\n                {\r\n                    className: 'list__add-button',\r\n                    icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M6 1V11\" stroke=\"#868686\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                        <path d=\"M1 6H11\" stroke=\"#868686\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    </svg>,\r\n                    name: 'Добавить список'\r\n                }\r\n            ]}\r\n            />\r\n            {visiblePopup && <div className=\"add-list__popup\">\r\n            <img onClick={onClose} src={closeSvg} alt=\"close button\" className=\"add-list__popup-close-btn\" />\r\n                <input value={inputValue} onChange={e => setinputValue(e.target.value)} className=\"field\" type=\"text\" placeholder=\"Название списка\" />\r\n                <div className=\"add-list__popup-colors\">    \r\n                    {colors.map(color => (<Badge className={selectedColor === color.id && 'active' } onClick={() => setSelectedColor(color.id)} key={color.id} color={color.name}/>))}\r\n                </div>\r\n                <button onClick={ addList} className=\"btn\">{isLoading ? 'Добавление...' : 'Добавить'}</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AddButtonList;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/pen.d48cb023.svg\";","export default __webpack_public_path__ + \"static/media/plus.bb82cf25.svg\";","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport plusSvg from '../../../assets/img/plus.svg'\r\n\r\n\r\nimport './Tasks.scss'\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n\r\n    const [visibleForm, setFormVisible] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isLoading, setIsLoading] = useState('')\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!visibleForm)\r\n        setInputValue('')\r\n    }\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            listId: list.id,\r\n            text: inputValue,\r\n            completed: false\r\n        }\r\n        if(!inputValue) {\r\n            alert('Введите название задачи');\r\n            return;\r\n        }\r\n        setIsLoading(true)\r\n        axios.post('http://localhost:3001/tasks/', obj).then(({ data }) => {\r\n            onAddTask(list.id, data)\r\n            toggleFormVisible()\r\n        }).catch(() => {\r\n            alert('Ошибка при добавлении задачи')\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"tasks__form\">\r\n                {!visibleForm ? <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                    <img className=\"tasks__form-img\" src={plusSvg} alt=\"plus\" />\r\n                    <span>Новая задача</span>\r\n                </div> :\r\n                    <div className=\"tasks__form-block\">\r\n                        <input value={inputValue} onChange={e => setInputValue(e.target.value)} className=\"field\" type=\"text\" placeholder=\"Текст задачи\" />\r\n                        <div className=\"button\">\r\n                            <button disabled={isLoading} onClick={addTask} className=\"btn\">{isLoading ? 'Добавление..' : 'Добавить задачу'}</button>\r\n                            <button onClick={toggleFormVisible} className=\"btn btn--grey\">Отмена</button>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTaskForm","import React from 'react'\r\n\r\nconst TasksItem = ({ list, id, text, onEdit, onRemoveTask, onComplete , completed}) => {\r\n\r\n\r\n    const onChangeCheckbox = e => {\r\n        onComplete(list.id, id, e.target.checked)\r\n    } \r\n\r\n    return (\r\n        <div key={id} className=\"tasks__items-block\">\r\n            <label className=\"checkbox\">\r\n                <input onChange={onChangeCheckbox} id={`task-${id}`} type=\"checkbox\" checked={completed}/>\r\n                <label htmlFor={`task-${id}`}>    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg></label>\r\n            </label>\r\n            <p>{text}</p>\r\n            <div className=\"tasks__items-block-actions\">\r\n                <div onClick={() => onEdit(list.id, {id, text})}>\r\n                    <svg\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <div onClick={() => onRemoveTask(list.id, id)}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"11\"\r\n                        viewBox=\"0 0 11 11\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TasksItem;","import React from 'react';\r\nimport penSvg from '../../../assets/img/pen.svg'\r\n\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport AddTaskForm from './addTaskForm'\r\n\r\nimport './Tasks.scss'\r\nimport TasksItem from './TasksItem';\r\n\r\nconst Tasks = ({ list, onEditTitle, onAddTask, withoutEmpty, onRemoveTask, onEditTask, onCompleteTask }) => {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название списка', list.name);\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios.patch('http://localhost:3001/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('не удалось обновить название списка')\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <Link to={`/lists/${list.id}`}>\r\n                <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n                    {list.name}\r\n                    <img className=\"tasks__title-img\" onClick={editTitle} src={penSvg} alt=\"pen svg\" />\r\n                </h2>\r\n            </Link>\r\n\r\n            <div className=\"tasks__items\">\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && <h2>Задачи отсутсвуют!</h2>}\r\n                {list.tasks && list.tasks.map(task => (\r\n                    <TasksItem key={task.id} list={list} {...task} onRemoveTask={onRemoveTask} onEdit={onEditTask} onComplete={onCompleteTask} />\r\n                ))}\r\n                <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tasks","export default __webpack_public_path__ + \"static/media/Vector.a862c15f.svg\";","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Route, useHistory, useLocation } from 'react-router'\n\n\n\nimport List from './components/List/Index'\nimport AddButtonList from './components/List/AddListButton/AddListButton'\nimport Tasks from './components/List/Tasks/Tasks'\n\nimport './App.css';\nimport listsvg from './assets/img/Vector.svg'\n\nfunction App() {\n\n\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  let location = useLocation()\n\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data);\n      });\n    axios.get('http://localhost:3001/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n\n\n\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId));\n      setActiveItem(list);\n    }\n  }, [lists, history.location.pathname]);\n\n  const onAddList = obj => {\n    const newlist = [\n      ...lists,\n      obj\n    ];\n    setLists(newlist);\n  }\n\n\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj]\n      }\n      return item\n    })\n    setLists(newList)\n  }\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        })\n      }\n      return list;\n    });\n    setLists(newList)\n    axios.patch('http://localhost:3001/tasks/' + taskId, {\n      completed\n    })\n      .catch(() => {\n        alert('не удалось обновить задачу')\n      })\n  }\n\n\n\n  const onEditListTitle = (id, title) => {\n    const newlist = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    })\n    setLists(newlist);\n  }\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу?')) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId)\n        }\n        return item;\n      });\n      setLists(newList)\n      axios.delete('http://localhost:3001/tasks/' + taskId)\n        .catch(() => {\n          alert('не удалось удалить задачу')\n        })\n    }\n  }\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text)\n    if (!newTaskText) {\n      return;\n    }\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText\n          }\n          return task;\n        })\n      }\n      return list;\n    });\n    setLists(newList)\n    axios.patch('http://localhost:3001/tasks/' + taskObj.id, { text: newTaskText })\n      .catch(() => {\n        alert('не удалось обновить задачу')\n      })\n  }\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__sidebar\">\n        <List onClickItem={list => {\n          history.push(`/`)\n        }}\n          items={[\n            {\n              active: history.location.pathname === '/',\n              icon: <img src={listsvg} alt=\"list icon\" />,\n              name: 'Все задачи',\n            }\n          ]} />\n\n        {lists ? (\n          <List items={lists}\n            onRemove={id => {\n              const newLists = lists.filter(item => item.id !== id)\n              setLists(newLists)\n            }}\n            isRemovable\n            onClickItem={list => {\n              history.push(`/lists/${list.id}`)\n            }}\n            activeItem={activeItem}\n          />\n        ) : (\n          'Загрузка...'\n        )}\n\n        <AddButtonList onAddList={onAddList} colors={colors} />\n      </div>\n      <div className=\"todo__task\">\n        <Route exact path=\"/\">\n          {lists && lists.map(list => (<Tasks onAddTask={onAddTask}\n            key={list.id}\n            list={list}\n            onEditTitle={onEditListTitle}\n            onRemoveTask={onRemoveTask}\n            onEditTask={onEditTask}\n            onCompleteTask={onCompleteTask}\n            withoutEmpty />)\n          )}\n        </Route>\n        <Route path=\"/lists/:id\">\n          {lists && activeItem && <Tasks onAddTask={onAddTask}\n            list={activeItem}\n            onEditTitle={onEditListTitle}\n            onRemoveTask={onRemoveTask}\n            onEditTask={onEditTask}\n            onCompleteTask={onCompleteTask}\n          />}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n     <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}